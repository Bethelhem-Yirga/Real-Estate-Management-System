# Generated by Django 5.0.2 on 2024-04-27 16:33

import app1.models
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app1', '0031_applicationrent_status'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='application',
            name='date_added',
        ),
        migrations.AlterField(
            model_name='application',
            name='city',
            field=models.CharField(max_length=200, validators=[django.core.validators.RegexValidator(code='invalid_city_name', message='City name can only contain letters .', regex='^[a-zA-Z\\s]+$')]),
        ),
        migrations.AlterField(
            model_name='application',
            name='email',
            field=models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator(message='Enter a valid email address.')]),
        ),
        migrations.AlterField(
            model_name='application',
            name='first_name',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[A-Za-z]*$', message='First name should contain only alphabetic characters.'), django.core.validators.RegexValidator('^[^\\s]+$', message='First name should not contain spaces.')]),
        ),
        migrations.AlterField(
            model_name='application',
            name='gender',
            field=models.CharField(choices=[('Female', 'Female'), ('Male', 'Male')], max_length=10),
        ),
        migrations.AlterField(
            model_name='application',
            name='kebele',
            field=models.CharField(default='Kebele', max_length=200, validators=[app1.models.validate_no_space]),
        ),
        migrations.AlterField(
            model_name='application',
            name='last_name',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[A-Za-z]*$', message='Last name should contain only alphabetic characters.'), django.core.validators.RegexValidator('^[^\\s]+$', message='Last name should not contain spaces.')]),
        ),
        migrations.AlterField(
            model_name='application',
            name='marital_status',
            field=models.CharField(choices=[('Single', 'Single'), ('Married', 'Married')], max_length=100),
        ),
        migrations.AlterField(
            model_name='application',
            name='middle_name',
            field=models.CharField(default='middle name', max_length=100, validators=[django.core.validators.RegexValidator('^[A-Za-z]*$', message='Middle name should contain only alphabetic characters.'), django.core.validators.RegexValidator('^[^\\s]+$', message='Middle name should not contain spaces.')]),
        ),
        migrations.AlterField(
            model_name='application',
            name='nationality',
            field=models.CharField(choices=[('Ethiopian', 'Ethiopian'), ('Other', 'Other')], default='Ethiopian', max_length=100),
        ),
        migrations.AlterField(
            model_name='application',
            name='partner_first_name',
            field=models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator('^[A-Za-z]*$', message='First name should contain only alphabetic characters.'), django.core.validators.RegexValidator('^[^\\s]+$', message='Partner First name should not contain spaces.')]),
        ),
        migrations.AlterField(
            model_name='application',
            name='partner_last_name',
            field=models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator('^[A-Za-z]*$', message='First name should contain only alphabetic characters.'), django.core.validators.RegexValidator('^[^\\s]+$', message='Partner Last name should not contain spaces.')]),
        ),
        migrations.AlterField(
            model_name='application',
            name='partner_phone_number',
            field=models.CharField(blank=True, max_length=150, null=True, validators=[django.core.validators.RegexValidator('^\\d{10,15}$', message='Phone number should be 10 to 15 digits.')]),
        ),
        migrations.AlterField(
            model_name='application',
            name='partner_work_status',
            field=models.CharField(blank=True, choices=[('Employed', 'Employed'), ('Self-employed', 'Self-employed')], max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='application',
            name='phone_number',
            field=models.CharField(max_length=150, validators=[django.core.validators.RegexValidator('^\\d{10,15}$', message='Phone number should be 10 to 15 digits.')]),
        ),
        migrations.AlterField(
            model_name='application',
            name='sub_city',
            field=models.CharField(default='sub city', max_length=200, validators=[django.core.validators.RegexValidator(code='invalid_sub_city_name', message='Sub City name can only contain letters .', regex='^[a-zA-Z\\s]+$')]),
        ),
        migrations.AlterField(
            model_name='application',
            name='work_status',
            field=models.CharField(choices=[('Employed', 'Employed'), ('Self-employed', 'Self-employed')], max_length=100),
        ),
        migrations.AlterField(
            model_name='applicationrent',
            name='city',
            field=models.CharField(max_length=200, validators=[django.core.validators.RegexValidator(code='invalid_city_name', message='City name can only contain letters.', regex='^[a-zA-Z\\s]+$')]),
        ),
        migrations.AlterField(
            model_name='applicationrent',
            name='email',
            field=models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator(message='Enter a valid email address.')]),
        ),
        migrations.AlterField(
            model_name='applicationrent',
            name='first_name',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[A-Za-z]*$', message='First name should contain only alphabetic characters.'), django.core.validators.RegexValidator('^[^\\s]+$', message='First name should not contain spaces.')]),
        ),
        migrations.AlterField(
            model_name='applicationrent',
            name='gender',
            field=models.CharField(choices=[('Female', 'Female'), ('Male', 'Male')], max_length=10),
        ),
        migrations.AlterField(
            model_name='applicationrent',
            name='kebele',
            field=models.CharField(default='Kebele', max_length=200, validators=[app1.models.validate_no_space]),
        ),
        migrations.AlterField(
            model_name='applicationrent',
            name='last_name',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[A-Za-z]*$', message='Last name should contain only alphabetic characters.'), django.core.validators.RegexValidator('^[^\\s]+$', message='Last name should not contain spaces.')]),
        ),
        migrations.AlterField(
            model_name='applicationrent',
            name='middle_name',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[A-Za-z]*$', message='Middle name should contain only alphabetic characters.'), django.core.validators.RegexValidator('^[^\\s]+$', message='Middle name should not contain spaces.')]),
        ),
        migrations.AlterField(
            model_name='applicationrent',
            name='phone_number',
            field=models.CharField(max_length=150, validators=[django.core.validators.RegexValidator('^\\d{10,15}$', message='Phone number should be 10 to 15 digits.')]),
        ),
        migrations.AlterField(
            model_name='applicationrent',
            name='sub_city',
            field=models.CharField(default='sub city', max_length=200, validators=[django.core.validators.RegexValidator(code='invalid_sub_city_name', message='Sub City name can only contain letters .', regex='^[a-zA-Z\\s]+$')]),
        ),
        migrations.AlterField(
            model_name='applicationrent',
            name='work_status',
            field=models.CharField(choices=[('Employed', 'Employed'), ('Self-employed', 'Self-employed')], max_length=100),
        ),
    ]
